/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
  // Apply the java-library plugin for API and implementation separation.
  id 'java-library'
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

dependencies {

  implementation project(':persephone-lib')
  
  // Use JUnit Jupiter for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0-M1'
  testImplementation group: 'com.google.truth', name: 'truth', version: '1.1.2'

  // This dependency is exported to consumers, that is to say found on their compile classpath.
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '3.0.0-alpha1'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '3.0.0-alpha1'
  // This dependency is to avoid SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder" message
  implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.25'
  
  implementation group: 'com.github.oshi', name: 'oshi-core', version: '5.8.0'
  
  implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '3.0.1'
  implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '3.0.2-b01'

}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
    testLogging {
    events "passed", "skipped", "failed"
  }
}
