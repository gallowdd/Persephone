//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.02.07 at 10:39:30 AM EST 
//


package edu.pitt.gallowdd.persephone.synthenvinfo;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for locationXmlEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="locationXmlEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="household"/&gt;
 *     &lt;enumeration value="workplace"/&gt;
 *     &lt;enumeration value="school"/&gt;
 *     &lt;enumeration value="nursing_facility"/&gt;
 *     &lt;enumeration value="college_dorm"/&gt;
 *     &lt;enumeration value="military_barracks"/&gt;
 *     &lt;enumeration value="prison"/&gt;
 *     &lt;enumeration value="hospital"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "locationXmlEnum")
@XmlEnum
public enum LocationXmlEnum {

    @XmlEnumValue("household")
    HOUSEHOLD("household"),
    @XmlEnumValue("workplace")
    WORKPLACE("workplace"),
    @XmlEnumValue("school")
    SCHOOL("school"),
    @XmlEnumValue("nursing_facility")
    NURSING_FACILITY("nursing_facility"),
    @XmlEnumValue("college_dorm")
    COLLEGE_DORM("college_dorm"),
    @XmlEnumValue("military_barracks")
    MILITARY_BARRACKS("military_barracks"),
    @XmlEnumValue("prison")
    PRISON("prison"),
    @XmlEnumValue("hospital")
    HOSPITAL("hospital");
    private final String value;

    LocationXmlEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LocationXmlEnum fromValue(String v) {
        for (LocationXmlEnum c: LocationXmlEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
